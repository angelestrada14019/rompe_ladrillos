(()=>{"use strict";var t=function(){function t(){this.x=0,this.y=0,this.dx=3,this.dy=3,this.r=0,this.color="blue"}return t.prototype.init=function(t){this.resize(),this.x=window.innerWidth/2,this.y=window.innerHeight/2},t.prototype.resize=function(){this.r=window.innerWidth/50},t.prototype.checkBounds=function(t){var i=this.x-this.r,e=this.x+this.r,n=this.y-this.r,s=this.y+this.r;return i<=0&&(this.dx=-this.dx),e>=t.width&&(this.dx=-this.dx),n<=0&&(this.dy=-this.dy),!(s>=t.height)},t.prototype.paint=function(t){var i=t.context;return i.fillStyle=this.color,i.beginPath(),i.arc(this.x,this.y,this.r,0,2*Math.PI),i.fill(),i.closePath(),this.move(t)},t.prototype.invertDeltaY=function(){this.dy=-this.dy},t.prototype.invertDeltaX=function(){this.dx=-this.dx},t.prototype.detectPaddleCollision=function(t){if(this.dy<0)return!1;var i=this.x,e=this.x,n=this.y+this.r,s=t.getPosX(),o=t.getPosX()+t.getWidth(),h=t.getPosY(),r=n>h&&n<=h+t.getHeight()&&i>=s&&e<=o;if(r){console.log("collision");var c=i-(s+t.getWidth()/2),l=(c/=t.getWidth()/2)*(Math.PI/3);this.dx=4*Math.sin(l),this.dy=-4*Math.cos(l)}return r},t.prototype.hitsBrick=function(t){return this.bottomBrickCollision(t)?(this.invertDeltaY(),!0):this.topBrickCollision(t)?(this.invertDeltaY(),!1):(this.leftBrickCollision(t)||!!this.rightBrickCollision(t))&&(this.invertDeltaX(),!0)},t.prototype.move=function(t){return this.x+=this.dx,this.y+=this.dy,this.checkBounds(t)},t.prototype.bottomBrickCollision=function(t){var i=t.getPosY()+t.getHeight(),e=t.getPosX(),n=t.getPosX()+t.getWidth(),s=this.y-this.r;return this.x>=e&&this.x<=n&&s<=i&&this.dy<0},t.prototype.topBrickCollision=function(t){var i=t.getPosY(),e=t.getPosX(),n=t.getPosX()+t.getWidth(),s=t.getPosY()+t.getHeight(),o=this.y+this.r,h=this.y-this.r;return this.x+this.r>e&&this.x-this.r<n&&o>i&&h<=s&&this.dy>0},t.prototype.leftBrickCollision=function(t){var i=t.getPosY(),e=t.getPosX(),n=t.getPosX()+t.getWidth(),s=t.getPosY()+t.getHeight(),o=this.y+this.r,h=this.y-this.r;return this.x+this.r>e&&this.x-this.r<n&&o>i&&h<=s&&this.dx>0},t.prototype.rightBrickCollision=function(t){var i=t.getPosY(),e=t.getPosX(),n=t.getPosX()+t.getWidth(),s=t.getPosY()+t.getHeight(),o=this.y+this.r,h=this.y-this.r;return this.x+this.r>e&&this.x-this.r<n&&o>i&&h<=s&&this.dx<0},t}(),i=function(){function t(){}return t.prototype.init=function(){this.canvas=document.createElement("canvas"),document.body.appendChild(this.canvas),this.canvas.style.backgroundColor="#f0db4f",this.ctx=this.canvas.getContext("2d"),this.resize()},t.prototype.clear=function(t){t.fillStyle=this.canvas.style.backgroundColor,t.fillRect(0,0,this.canvas.width,this.canvas.height)},Object.defineProperty(t.prototype,"context",{get:function(){return this.ctx},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.canvas.width},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.canvas.height},enumerable:!1,configurable:!0}),t.prototype.resize=function(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight},t}(),e=function(){function t(){this.w=0,this.h=0,this.x=0,this.y=0,this.color="green"}return t.prototype.init=function(){this.resize()},t.prototype.resize=function(){this.w=window.innerWidth/8,this.h=this.w/5,this.x=(window.innerWidth-this.w)/2,this.y=window.innerHeight-this.h},t.prototype.checkBounds=function(t){var i=this.x,e=this.x+this.w;i<=0&&(this.x=0),e>=t&&(this.x=t-this.w)},t.prototype.move=function(t,i){this.x+=t,this.checkBounds(i)},t.prototype.paint=function(t){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.w,this.h)},t.prototype.getWidth=function(){return this.w},t.prototype.getHeight=function(){return this.h},t.prototype.getPosX=function(){return this.x},t.prototype.getPosY=function(){return this.y},t}(),n=function(){function t(){this.name="Jugador",this.points=0,this.lives=3}return t.prototype.init=function(){var t=window.prompt("Ingresa tu nombre:",this.name);null!=t&&t.length>0&&(this.name=t),document.title=this.name},t.prototype.incPoints=function(t){this.points+=t},t.prototype.getPoints=function(){return this.points},t.prototype.decLives=function(){this.lives--},t.prototype.numLives=function(){return this.lives},t.prototype.getName=function(){return this.name},t}(),s=function(){function t(t,i){this.row=t,this.col=i,this.color="orangered",this._visible=!0}return t.prototype.resize=function(){this.width=(window.innerWidth-(o.BRICKS_PER_ROW-1)*o.GAP)/o.BRICKS_PER_ROW,this.height=this.width/4},t.prototype.paint=function(t){if(this.visible){var i=this.col*(this.width+o.GAP),e=this.row*(this.height+o.GAP);t.fillStyle=this.color,t.fillRect(i,e,this.width,this.height)}},t.prototype.getWidth=function(){return this.width},t.prototype.getHeight=function(){return this.height},t.prototype.getPosX=function(){return this.col*(this.width+o.GAP)},t.prototype.getPosY=function(){return this.row*(this.height+o.GAP)},Object.defineProperty(t.prototype,"visible",{get:function(){return this._visible},set:function(t){this._visible=t},enumerable:!1,configurable:!0}),t}(),o=function(){function t(){this.bricks=[]}return t.prototype.init=function(){for(var i=0;i<t.NUM_ROWS;i++)for(var e=0;e<t.BRICKS_PER_ROW;e++)this.bricks.push(new s(i,e));this.resize()},t.prototype.getBricks=function(){return this.bricks},t.prototype.paint=function(t){this.bricks.forEach((function(i){return i.paint(t)}))},t.prototype.resize=function(){this.bricks.forEach((function(t){return t.resize()}))},t.prototype.detectBallCollision=function(t){var i=0;return this.bricks.forEach((function(e){e.visible&&t.hitsBrick(e)&&(e.visible=!1,i++)})),i},t.BRICKS_PER_ROW=5,t.NUM_ROWS=3,t.GAP=5,t}();(function(){function s(s){this._version=s,this.canvas=new i,this.wall=new o,this.ball=new t,this.paddle=new e,this.player=new n}return s.getInstance=function(){return s.instance},s.prototype.init=function(){this.canvas.init(),this.wall.init(),this.paddle.init(),this.ball.init(this.paddle),this.player.init(),window.onresize=this.resize.bind(this),window.onkeydown=this.keydown.bind(this),this.paint()},s.prototype.paint=function(){if(0!=this.player.numLives()){if(this.player.getPoints()==this.wall.getBricks().length)return document.title=" YOU WIN ["+this.player.getPoints()+" POINTS]",void window.alert("YOU WIN!");if(!this.paused){var t=this.canvas.context;t&&(this.canvas.clear(t),this.wall.paint(t),this.paddle.paint(t),this.ball.paint(this.canvas)?this.detectCollisions():(this.player.decLives(),this.ball.init(this.paddle),this.paused=!0),window.requestAnimationFrame(this.paint.bind(this)))}}else document.title="GAME OVER ["+this.player.getPoints()+" POINTS]"},Object.defineProperty(s.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),s.prototype.resize=function(){this.canvas.resize(),this.wall.resize(),this.ball.resize(),this.paddle.resize()},s.prototype.detectBallWallCollision=function(){var t=this.wall.detectBallCollision(this.ball);this.player.incPoints(t),document.title=this.player.getName()+" ["+this.player.getPoints()+" POINTS]"},s.prototype.detectCollisions=function(){this.ball.detectPaddleCollision(this.paddle)||this.detectBallWallCollision()},s.prototype.keydown=function(t){t.preventDefault(),"Space"==t.code?(this.paused=!this.paused,this.paused||window.requestAnimationFrame(this.paint.bind(this))):"ArrowLeft"==t.code?this.paddle.move(-40,this.canvas.width):"ArrowRight"==t.code&&this.paddle.move(40,this.canvas.width)},s.instance=new s("1.1"),s})().getInstance().init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,